<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAHYAAAB2AAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVVVVA3heOpB5XTpleV46OXdeOrx7WjofeF05jnlfOYF4YDggeF46sXZc
        OycAAAAAAAAAAAAAAAAAAAAAVVVVA3hdO6F4XjrOeF866HheOvF4XjuueF459HheOtB4XjrZeF468nle
        Orh4Xjrldlw7JwAAAAAAAAAAAAAAAHldOXB4XjrpeFo8EXdeOW95XzqnAAAAAHleOtx5Xjo5eV45THhe
        OswAAAAAeV87lHhfOdUAAAAAelk3F3deOp55XTw3eF866HheOr14XjrOeF464HhfO6p4Xjryd146vHhf
        OsJ4XjrseF87qnheOvF4XTlVelk3F3hfOdV4XTrKeF467HheOvt4Xjl9eV86p3heOsd4XzpmeF866Hhd
        OYZ5XjqSeF063XhfOmZ4XjrZeV47h3heOsN4XjqmAAAAAXheO4J4XjrleWA5KHheO3V5XjmpeFo8EXle
        Otx4XTpCeF05VXhdOsp4WjwReF46onleOsl5XjtfeF467HVgNyUAAAABd186zXheOv94Xjr/eF46/3he
        Ov94Xjr/eF46/3heOv94Xjr/eF46/3heOv56YDoweV46cnheOuR7YT4dd145eHdeOd55XjYTeF47bHhe
        OqIAAAAAeF462XhgOjV3XjtJeF46xgAAAAB4XjqVeF851XheOsx4XjqdAAAAAHpgOjB4XjrreF86jHhe
        OrB4XjrOeF46d3heOut4XjmTd146nnheOuF3Xjl4eF465HlfOXR3XzsreF46/XhgPEB4YDggeF464Xhe
        OqN5Xzq6eF461HheOoh5XjrteF07oXhfO6p4XjrleF46iHhfOuh3XzppeF06ynhdO6EAAAABeV06ZXhe
        Out2YjsaeV85dHleOakAAAABeF464HldOT94XjlReF460AAAAAF4XjqieF46x3heOoh4XjrYeWE9FQAA
        AAB3XjuLeF063XheOu54XjrueF46wHhfOuh3XjneeF465HheOul4XjrQeF851XpZNxd3XjpPeF4683pd
        OiwAAAAAAAAAAHdeOXh4XjlRelw4MnleOal5XjYTeF47gnheOut5XTw3d146mnpZNxcAAAAAeF46xXhe
        OqMAAAAAeF45UXVgNRh5XjYTeV06XQAAAAB4XjhEd2A5LYBgQBB4XjrleV85dAAAAAAAAAAAAAAAAHZb
        Nxx5Xjrcd146vnheOfR4XjrYeF460HheOvJ4Xjq0eF468HheOut3XjrPeF07oVVVVQMAAAAAAAAAAAAA
        AAAAAAAAdls3HHdeOqt1YDcleV06g3dfO496XD0ZeF46tHdcOTp3XjpceF05jlVVVQMAAAAAAAAAAAAA
        AAAAAAAA8AEAAOAAAADghAAAgAAAAAAAAAAAAAAAAAAAAACEAAAgAAAAAAAAAAAAAAAQAAAAGAEAACEH
        AAAABwAAgA8AAA==
</value>
  </data>
</root>